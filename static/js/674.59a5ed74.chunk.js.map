{"version":3,"file":"static/js/674.59a5ed74.chunk.js","mappings":"oMAEaA,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,YAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MAChB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EAMZ,KAGN,C,2ICfYK,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+F,SCfJI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACP,EAAD,YACE,SAACG,EAAD,KACA,SAACD,EAAD,CACEM,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,MAIlB,ECPD,IAiCA,EAjCmB,WAAO,IAAD,EACvB,GAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAe9C,OARAC,EAAAA,EAAAA,YAAU,WCdL,IAA4BC,EDeb,KAAdH,ICf2BG,EDiBVH,EChBhBI,MAAM,GAAD,OAJG,6CAIH,kBAAsBD,EAAtB,4BAHE,qCAGwDE,MACpE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,QAGlB,OAAOF,EAASG,MACjB,KDUIJ,MAAK,gBAAGK,EAAH,EAAGA,QAAH,OAAiBhB,EAAUgB,EAA3B,IACLC,OAAM,SAAAhB,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,CAACK,KAGJ,4BACGL,IAAS,mCAAWA,EAAMiB,QAAjB,0CACRjB,IACA,iCACE,SAACR,EAAD,CAAWC,MAAOY,EAAWX,SAlBX,SAAAwB,GAExBd,EAD4B,KAATc,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,IAgBsB,KAAdb,GAAsC,IAAlB3B,EAAOyC,SAAgB,qEAC5C,SAAC1C,EAAA,EAAD,CAAQC,OAAQA,SAKzB,C","sources":["components/Movies/Movies.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/MoviesPage.jsx","services/fetchMoviesByQuery.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\n\nexport const Movies = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <ul>\n      {movies.map(({id, title}) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Movies } from '../components/Movies/Movies';\nimport { SearchBox } from '../components/SearchBox/SearchBox';\nimport { fetchMoviesByQuery } from '../services/fetchMoviesByQuery';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('name') ?? '';\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (movieName === '') return;\n\n      fetchMoviesByQuery(movieName)\n        .then(({ results }) => setMovies(results))\n        .catch(error => setError(error));\n    }, [movieName]);\n\n  return (\n    <main>\n      {error && <h1>Oops, {error.message}. Please reload the page or go back</h1>}\n      {!error && (\n        <>\n          <SearchBox value={movieName} onChange={updateQueryString} />\n          {movieName !== '' && movies.length === 0 && <p>Sorry, there are no films with this name</p>}\n          <Movies movies={movies} />\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MoviesPage","const BASE_URL = 'https://api.themoviedb.org/3/search/movie/';\nconst API_KEY = '3ab3f6572c3def6f6cf5801fb6522013';\n\nexport function fetchMoviesByQuery(query) {\n  return fetch(`${BASE_URL}?query=${query}&page=1&&api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error('Fail');\n      }\n\n      return response.json();\n    }\n  );\n}"],"names":["Movies","movies","location","useLocation","map","id","title","to","state","from","Wrapper","styled","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","useState","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","query","fetch","then","response","ok","Error","json","results","catch","message","name","length"],"sourceRoot":""}