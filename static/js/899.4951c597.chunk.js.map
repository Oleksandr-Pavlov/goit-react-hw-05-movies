{"version":3,"file":"static/js/899.4951c597.chunk.js","mappings":"+NAgCA,EA5BgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YCNL,SAA2BP,GAChC,OAAOQ,MAAM,GAAD,OAJG,uCAIH,OAAeR,EAAf,oCAHE,qCAGsDS,MAClE,SAAAC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,QAGlB,OAAOF,EAASG,MACjB,GAEJ,EDHGC,CAAkBd,GACfS,MAAK,gBAAGM,EAAH,EAAGA,QAAH,OAAiBX,EAAWW,EAA5B,IACLC,OAAM,SAAAX,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,CAACL,KAGF,gCACGK,IAAS,mCAAWA,EAAMY,QAAjB,8BACTd,EAAQe,OAAS,GAAI,wBACnBf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASrB,EAApB,EAAoBA,GAApB,OACX,gBAAasB,MAAO,CAAEC,aAAc,QAApC,WACE,eAAGD,MAAO,CAAEC,aAAc,QAA1B,WACE,mCADF,IACkBH,MAElB,uBAAIC,MAJGrB,EADE,OAQP,8DAGb,C","sources":["components/Reviews/Reviews.jsx","services/fetchMovieReviews.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../services/fetchMovieReviews';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReviews(id)\n      .then(({ results }) => setReviews(results))\n      .catch(error => setError(error));\n  }, [id]);\n\n  return (\n    <>\n      {error && <h1>Oops, {error.message}. Please reload the page</h1>}\n      {reviews.length > 0 ? <ul>\n        {reviews.map(({ author, content, id }) => (\n          <li key={id} style={{ marginBottom: '20px' }}>\n            <p style={{ marginBottom: '10px' }}>\n              <b>Author:</b> {author}\n            </p>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul> : <p>Sorry, this movie has no reviews</p>}\n    </>\n  );\n};\n\nexport default Reviews\n","const BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst API_KEY = '3ab3f6572c3def6f6cf5801fb6522013';\n\nexport function fetchMovieReviews(id) {\n  return fetch(`${BASE_URL}${id}/reviews?page=1&&api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error('Fail');\n      }\n\n      return response.json();\n    }\n  );\n}\n"],"names":["id","useParams","useState","reviews","setReviews","error","setError","useEffect","fetch","then","response","ok","Error","json","fetchMovieReviews","results","catch","message","length","map","author","content","style","marginBottom"],"sourceRoot":""}