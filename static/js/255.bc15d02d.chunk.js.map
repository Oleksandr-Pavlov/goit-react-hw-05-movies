{"version":3,"file":"static/js/255.bc15d02d.chunk.js","mappings":"gQAIMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECrBD,IAiFA,EAjFqB,WAAO,IAAD,IACjBE,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,YCTL,SAA+BX,GACpC,OAAOY,MAAM,GAAD,OAJG,uCAIH,OAAeZ,EAAf,qBAHE,qCAGuCa,MAAK,SAAAC,GACxD,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,QAGlB,OAAOF,EAASG,MACjB,GACF,EDEGC,CAAsBlB,GACnBa,MAAK,SAAAV,GAAK,OAAIC,EAASD,EAAb,IACVgB,OAAM,SAAAd,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,CAACL,IAEJ,IAAQoB,EAAuDjB,EAAvDiB,YAAaC,EAA0ClB,EAA1CkB,MAAOC,EAAmCnB,EAAnCmB,aAAcC,EAAqBpB,EAArBoB,SAAUC,EAAWrB,EAAXqB,OAGpD,OACE,4BACGnB,IACC,mCAAWA,EAAMoB,QAAjB,0CAEF,SAAC7B,EAAD,CAAUC,GAAIU,EAAd,6BACEF,IACA,iCACE,iBAAKqB,MAAO,CAAEC,QAAS,OAAQC,IAAK,OAAQC,OAAQ,UAApD,WACE,gBACEC,IACkB,OAAhBV,EAbC,kCAcYA,EACT,sCAENW,IAAKV,EACLW,MAAM,MACNC,QAAQ,UAEV,iBACEP,MAAO,CAAEC,QAAS,OAAQO,cAAe,SAAUN,IAAK,QAD1D,WAGE,4BACE,wBAAKP,KACL,wCAAgBc,OAAOb,GAAcc,QAAQ,UAE/C,4BACE,sCACA,uBAAIb,QAEN,4BACE,oCACA,uBACGC,GAAUA,EAAOa,OACdb,EAAOc,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACrC,wCAKZ,gBACEf,MAAO,CACLG,OAAQ,SACRa,aAAc,kBACdC,UAAW,mBAJf,UAOE,2BACE,yBACE,SAAC,KAAD,CAAM9C,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,gCAMV,SAAC,EAAA+C,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","services/fetchMovieDetailsById.js"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { BackLink } from '../components/BackLink/BackLink';\nimport { fetchMovieDetailsById } from '../services/fetchMovieDetailsById';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchMovieDetailsById(id)\n      .then(movie => setMovie(movie))\n      .catch(error => setError(error));\n  }, [id]);\n\n  const { poster_path, title, vote_average, overview, genres } = movie;\n  const poster = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <main>\n      {error && (\n        <h1>Oops, {error.message}. Please reload the page or go back</h1>\n      )}\n      <BackLink to={backLinkHref}>Back to movies</BackLink>\n      {!error && (\n        <>\n          <div style={{ display: 'flex', gap: '50px', margin: '16px 0' }}>\n            <img\n              src={\n                poster_path !== null\n                  ? poster + poster_path\n                  : 'https://via.placeholder.com/300x450'\n              }\n              alt={title}\n              width=\"300\"\n              loading='lazy'\n            />\n            <div\n              style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}\n            >\n              <div>\n                <h2>{title}</h2>\n                <p>User score: {Number(vote_average).toFixed(1)}</p>\n              </div>\n              <div>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n              </div>\n              <div>\n                <h3>Genres</h3>\n                <p>\n                  {genres && genres.length\n                    ? genres.map(genre => genre.name).join(', ')\n                    : 'There are no known genres'}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              margin: '16px 0',\n              borderBottom: '1px solid black',\n              borderTop: '1px solid black',\n            }}\n          >\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails","const BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst API_KEY = '3ab3f6572c3def6f6cf5801fb6522013';\n\nexport function fetchMovieDetailsById(id) {\n  return fetch(`${BASE_URL}${id}?&api_key=${API_KEY}`).then(response => {\n    if (!response.ok) {\n      throw new Error('Fail');\n    }\n\n    return response.json();\n  });\n}"],"names":["StyledLink","styled","Link","BackLink","to","children","size","id","useParams","useState","movie","setMovie","error","setError","backLinkHref","useLocation","state","from","useEffect","fetch","then","response","ok","Error","json","fetchMovieDetailsById","catch","poster_path","title","vote_average","overview","genres","message","style","display","gap","margin","src","alt","width","loading","flexDirection","Number","toFixed","length","map","genre","name","join","borderBottom","borderTop","Suspense","fallback"],"sourceRoot":""}